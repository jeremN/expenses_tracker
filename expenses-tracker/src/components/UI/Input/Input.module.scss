@import '../../../assets/scss/helpers/_variables.scss';

$inputBorderColor: $grey !default;
$inputDisabledColor: $grey !default;
$inputHasErrorColor: $red !default;
$labelColor: $blueDark !default;
$inputCheckedColor: $blueDark !default;
$inputCheckedBoxShadow: $blue !default;

.form {
	&__group {
		position: relative;
		display: flex;
		flex-flow: column nowrap;
		align-items: flex-start;
		margin: 1rem 0;
		flex-grow: 1;
		flex-basis: 100%;
		width: 100%;

		&--isInvalid {
			.form__field {
				border-color: 1px solid $inputHasErrorColor;
			}
		}
	}

	&__label {
		line-height: 1.8;
		font-size: 1.4rem;
		font-weight: 700;
		color: $labelColor;
	}

	&__errorMsg {
		display: none;
		font-size: 1.4rem;
		color: $inputHasErrorColor;
	}

	&__field {
		width: 100%;
		height: 3.2rem;
		border: 1px solid $inputBorderColor;
		padding: 0.5rem;

		&[type="radio"] {
		  appearance: none;
		  vertical-align: text-bottom;
		  outline: 0;
		  cursor: pointer;
			width: 2rem !important;
			height: 2rem !important;
			border-radius: 50%;
			border: 1px solid $inputBorderColor;
			box-shadow: inset 0 0 0 1px $inputBorderColor;
			background-color: $white;
			transition: all 0.15s;
			position: relative;
			margin-right: 0.5rem;

			&:checked {
				box-shadow: inset 0 0 0 1px $inputCheckedBoxShadow;
				color: $inputCheckedBoxShadow;

				&:before {
					content: '';
					border-radius: 50%;
					width: 1rem;
					height: 1rem;
					position: absolute;
					background-color: currentColor;
					top: 50%;
					left: 50%;
					transform: translate3d(-50%, -50%, 0);
				}
			}

			~ label { cursor: pointer; }
		}

		&:disabled {
		 	cursor: not-allowed;
		 	border-color: $inputDisabledColor;

		 	& + label {
		 		color: $inputDisabledColor;
		 		cursor: not-allowed;
		 	}

		 	&:checked {
		 		color: $inputDisabledColor;
				box-shadow: inset 0 0 0 1px $inputDisabledColor;
		 	}
		}

	}
}